#+TITLE: Edwin

Edwin is a dynamic window manager for Emacs. It automatically arranges your
Emacs panes (called "windows" in Emacs parlance) into predefined layouts,
[[https://dwm.suckless.org/][dwm]]-style.

* Installation

Copy or clone Edwin somewhere on your system:

#+BEGIN_SRC sh
  git clone https://github.com/ajgrf/edwin ~/.emacs.d/edwin
#+END_SRC

Then add its location to =load-path=:

#+BEGIN_SRC emacs-lisp
  (add-to-list 'load-path
               (expand-file-name "~/.emacs.d/edwin"))
#+END_SRC

* Concepts

Edwin divides the frame into 2 areas, the master area and the stack.
The master area contains the largest window(s), and other windows are
placed in the stack.

#+BEGIN_EXAMPLE
+-----------+---------+
|           |    1    |
|           +---------+
|  master   |    2    |
|           +---------+
|           |    3    |
+-----------+---------+
#+END_EXAMPLE

If the frame is too narrow for 2 columns, Edwin will instead put the
master area on top:

#+BEGIN_EXAMPLE
+------------+
|            |
|  master    |
|            |
+------------+
|     1      |
+------------+
|     2      |
+------------+
#+END_EXAMPLE

* Key Bindings

|--------------+--------------------------------------|
| Binding      | Action                               |
|--------------+--------------------------------------|
| =M-r=        | Arrange windows                      |
| =M-j=        | Move to next window                  |
| =M-k=        | Move to previous window              |
| =M-S-j=      | Swap places with the next window     |
| =M-S-k=      | Swap places with the previous window |
| =M-h=        | Decrease the size of the master area |
| =M-l=        | Increase the size of the master area |
| =M-d=        | Decrease number of windows in master |
| =M-i=        | Increase number of windows in master |
| =M-S-c=      | Delete window                        |
| =M-<return>= | Cycle window to/from master area     |
|--------------+--------------------------------------|

* Scope

Edwin does not provide workspaces or window rules, instead delegating
such functionality to other plugins and Emacs facilities. See for example
[[https://github.com/wasamasa/eyebrowse][eyebrowse]],
[[https://github.com/ema2159/centaur-tabs][Centaur Tabs]], or
[[https://github.com/wasamasa/shackle][shackle]].
